steps:
    - id: "Generating service-account-storage.json"
      name: 'gcloud'
      args:
        - kms
        - decrypt
        - --ciphertext-file=./storage/credentials/google/service-account-storage.json.enc
        - --plaintext-file=./storage/credentials/google/service-account-storage.json
        - --location=global
        - --keyring=test-lesson
        - --key=service-account

    - id: "Performing  docker-compose"
      name: 'docker/compose'
      args: ["-f", "docker-compose.prod.yml", "up", "-d"]
      env:
        - GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID
        - GOOGLE_CLOUD_KEY_FILE=service-account-storage.json
        - GOOGLE_CLOUD_STORAGE_BUCKET=micro-video-codeflix
        - GOOGLE_CLOUD_STORAGE_API_URI=https://storage.cloud.google.com/code-education-activities
        - TESTING_PROD=true


    - id: "Chown in /var/www"
      name: 'docker'
      args: ['exec','-u','root','-t','micro-videos-app','chown','-R','www-data:www-data','/var/www']

    - id: "Performing composer"
      name: 'docker'
      args: ["exec", "-t", "micro-videos-app", "composer", "install"]

    - id: "Copying .env"
      name: 'docker'
      args: ["exec", "-t", "micro-videos-app", "cp", ".env.example", ".env"]

    - id: "Copying .env.testing"
      name: 'docker'
      args: ["exec", "-t", "micro-videos-app", "cp", ".env.testing.example", ".env.testing"]

    - id: "Performing key:generate"
      name: 'docker'
      args: ["exec", "-t", "micro-videos-app", "php", "/var/www/artisan", "key:generate"]

    - id: "Performing migrations"
      name: 'docker'
      args: ["exec", "-t", "micro-videos-app", "php", "/var/www/artisan", "migrate"]

    - id: "Performing PHPUnit"
      name: 'docker'
      args: ["exec", "-t", "micro-videos-app", "php", "/var/www/vendor/bin/phpunit", "-c","/var/www/phpunit.xml"]
